suite: test kafka-chart/charts/cp-zookeeper/templates/statefulset.yaml
templates:
  - statefulset.yaml
tests:
  - it: should pass
    release:
      name: demo-release
    asserts:
      - equal: 
          path: apiVersion
          value: [NeedYourInput]
      - equal: 
          path: kind
          value: [NeedYourInput]
      - equal: 
          path: metadata.name
          value: [NeedYourInput]
      - equal: 
          path: metadata.labels.app
          value: [NeedYourInput]
      - equal: 
          path: metadata.labels.chart
          value: [NeedYourInput]
      - equal: 
          path: metadata.labels.release
          value: [NeedYourInput]
      - equal: 
          path: metadata.labels.heritage
          value: [NeedYourInput]
      - equal: 
          path: spec.serviceName
          value: [NeedYourInput]
      - equal: 
          path: spec.podManagementPolicy
          value: [NeedYourInput]
      - equal: 
          path: spec.replicas
          value: [NeedYourInput]
      - equal: 
          path: spec.updateStrategy.type
          value: [NeedYourInput]
      - equal: 
          path: spec.template.metadata.labels.app
          value: [NeedYourInput]
      - equal: 
          path: spec.template.metadata.labels.release
          value: [NeedYourInput]
      - equal: 
          path: spec.template.metadata.annotations
          value: [NeedYourInput]
      - equal: 
          path: spec.template.metadata.annotations.prometheus.io/scrape
          value: [NeedYourInput]
      - equal: 
          path: spec.template.metadata.annotations.prometheus.io/port
          value: [NeedYourInput]
      - equal: 
          path: spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution.weight
          value: [NeedYourInput]
      - equal: 
          path: spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution.podAffinityTerm.labelSelector.matchExpressions.key
          value: [NeedYourInput]
      - equal: 
          path: spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution.podAffinityTerm.labelSelector.matchExpressions.operator
          value: [NeedYourInput]
      - equal: 
          path: spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution.podAffinityTerm.labelSelector.matchExpressions.values
          value: [NeedYourInput]
      - equal: 
          path: spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution.podAffinityTerm.labelSelector.matchExpressions.key
          value: [NeedYourInput]
      - equal: 
          path: spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution.podAffinityTerm.labelSelector.matchExpressions.operator
          value: [NeedYourInput]
      - equal: 
          path: spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution.podAffinityTerm.labelSelector.matchExpressions.values
          value: [NeedYourInput]
      - equal: 
          path: spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution.podAffinityTerm.topologyKey
          value: [NeedYourInput]
      - equal: 
          path: spec.template.spec.containers
          value: [NeedYourInput]
      - equal: 
          path: spec.template.spec.containers.name
          value: [NeedYourInput]
      - equal: 
          path: spec.template.spec.containers.image
          value: [NeedYourInput]
      - equal: 
          path: spec.template.spec.containers.ports.containerPort
          value: [NeedYourInput]
      - equal: 
          path: spec.template.spec.containers.resources
          value: [NeedYourInput]
      - equal: 
          path: spec.template.spec.containers.volumeMounts.name
          value: [NeedYourInput]
      - equal: 
          path: spec.template.spec.containers.volumeMounts.mountPath
          value: [NeedYourInput]
      - equal: 
          path: spec.template.spec.containers.name
          value: [NeedYourInput]
      - equal: 
          path: spec.template.spec.containers.image
          value: [NeedYourInput]
      - equal: 
          path: spec.template.spec.containers.imagePullPolicy
          value: [NeedYourInput]
      - equal: 
          path: spec.template.spec.containers.ports.containerPort
          value: [NeedYourInput]
      - equal: 
          path: spec.template.spec.containers.ports.name
          value: [NeedYourInput]
      - equal: 
          path: spec.template.spec.containers.ports.containerPort
          value: [NeedYourInput]
      - equal: 
          path: spec.template.spec.containers.ports.name
          value: [NeedYourInput]
      - equal: 
          path: spec.template.spec.containers.ports.containerPort
          value: [NeedYourInput]
      - equal: 
          path: spec.template.spec.containers.ports.name
          value: [NeedYourInput]
      - equal: 
          path: spec.template.spec.containers.ports.containerPort
          value: [NeedYourInput]
      - equal: 
          path: spec.template.spec.containers.ports.name
          value: [NeedYourInput]
      - equal: 
          path: spec.template.spec.containers.resources
          value: [NeedYourInput]
      - equal: 
          path: spec.template.spec.containers.env.name 
          value: [NeedYourInput]
      - equal: 
          path: spec.template.spec.containers.env.value
          value: [NeedYourInput]
      - equal: 
          path: spec.template.spec.containers.env.name 
          value: [NeedYourInput]
      - equal: 
          path: spec.template.spec.containers.env.value
          value: [NeedYourInput]
      - equal: 
          path: spec.template.spec.containers.env.name 
          value: [NeedYourInput]
      - equal: 
          path: spec.template.spec.containers.env.value
          value: [NeedYourInput]
      - equal: 
          path: spec.template.spec.containers.env.name 
          value: [NeedYourInput]
      - equal: 
          path: spec.template.spec.containers.env.value
          value: [NeedYourInput]
      - equal: 
          path: spec.template.spec.containers.env.name 
          value: [NeedYourInput]
      - equal: 
          path: spec.template.spec.containers.env.value
          value: [NeedYourInput]
      - equal: 
          path: spec.template.spec.containers.env.name 
          value: [NeedYourInput]
      - equal: 
          path: spec.template.spec.containers.env.value
          value: [NeedYourInput]
      - equal: 
          path: spec.template.spec.containers.env.name 
          value: [NeedYourInput]
      - equal: 
          path: spec.template.spec.containers.env.value
          value: [NeedYourInput]
      - equal: 
          path: spec.template.spec.containers.env.name 
          value: [NeedYourInput]
      - equal: 
          path: spec.template.spec.containers.env.value
          value: [NeedYourInput]
      - equal: 
          path: spec.template.spec.containers.env.name
          value: [NeedYourInput]
      - equal: 
          path: spec.template.spec.containers.env.value
          value: [NeedYourInput]
      - equal: 
          path: spec.template.spec.containers.env.name 
          value: [NeedYourInput]
      - equal: 
          path: spec.template.spec.containers.env.value
          value: [NeedYourInput]
      - equal: 
          path: spec.template.spec.containers.env.name
          value: [NeedYourInput]
      - equal: 
          path: spec.template.spec.containers.env.valueFrom.fieldRef.fieldPath
          value: [NeedYourInput]
      - equal: 
          path: spec.template.spec.containers.volumeMounts.name
          value: [NeedYourInput]
      - equal: 
          path: spec.template.spec.containers.volumeMounts.mountPath
          value: [NeedYourInput]
      - equal: 
          path: spec.template.spec.containers.volumeMounts.name
          value: [NeedYourInput]
      - equal: 
          path: spec.template.spec.containers.volumeMounts.mountPath
          value: [NeedYourInput]
      - equal: 
          path: spec.template.spec.imagePullSecrets
          value: [NeedYourInput]
      - equal: 
          path: spec.template.spec.volumes
          value: [NeedYourInput]
      - equal: 
          path: spec.template.spec.volumes.name
          value: [NeedYourInput]
      - equal: 
          path: spec.template.spec.volumes.emptyDir
          value: [NeedYourInput]
      - equal: 
          path: spec.template.spec.volumes.name
          value: [NeedYourInput]
      - equal: 
          path: spec.template.spec.volumes.emptyDir
          value: [NeedYourInput]
      - equal: 
          path: spec.template.spec.volumes.name
          value: [NeedYourInput]
      - equal: 
          path: spec.template.spec.volumes.configMap.name
          value: [NeedYourInput]
      - equal: 
          path: spec.template.spec.nodeSelector
          value: [NeedYourInput]
      - equal: 
          path: spec.template.spec.tolerations
          value: [NeedYourInput]
      - equal: 
          path: spec.volumeClaimTemplates.metadata.name
          value: [NeedYourInput]
      - equal: 
          path: spec.volumeClaimTemplates.spec.accessModes
          value: [NeedYourInput]
      - equal: 
          path: spec.volumeClaimTemplates.spec.resources.requests.storage
          value: [NeedYourInput]
      - equal: 
          path: spec.volumeClaimTemplates.spec.storageClassName
          value: [NeedYourInput]
      - equal: 
          path: spec.volumeClaimTemplates.spec.storageClassName
          value: [NeedYourInput]
      - equal: 
          path: spec.volumeClaimTemplates.metadata.name
          value: [NeedYourInput]
      - equal: 
          path: spec.volumeClaimTemplates.spec.accessModes
          value: [NeedYourInput]
      - equal: 
          path: spec.volumeClaimTemplates.spec.resources.requests.storage
          value: [NeedYourInput]
      - equal: 
          path: spec.volumeClaimTemplates.spec.storageClassName
          value: [NeedYourInput]
      - equal: 
          path: spec.volumeClaimTemplates.spec.storageClassName
          value: [NeedYourInput]
